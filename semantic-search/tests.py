from movie_recs_hf import *
import unittest

class UnitTests(unittest.TestCase):
    def test_connect_to_db(self):
        self.assertRaises(ConnectionError, connect_to_db, 12345)

    def test_get_first_items(self):
        items = get_first_items(3)
        result = []
        for i in items:
            for k, v in i.items():
                if k == 'title':
                    result.append(v)
                    break

        expected_items = [
            'The Great Train Robbery',
            'A Corner in Wheat',
            'Winsor McCay, the Famous Cartoonist of the N.Y. Herald and His Moving Comics'
        ]
        self.assertEqual(expected_items, result)

    def test_generate_embedding(self):
        embedding = generate_embedding('The Great Train Robbery')
        expected_embedding = [-0.05858781933784485, 0.10285640507936478, 0.003832620568573475, 0.027242040261626244, 0.01947183534502983, 0.0865369364619255, 0.04600171372294426, 0.06977295130491257, -0.045864250510931015, -0.012410047464072704, 0.07195130735635757, 0.09997887164354324, 0.02731366828083992, 0.01637560874223709, -0.07784096151590347, -0.06466186046600342, 0.08603763580322266, 0.004098639823496342, -0.06355060636997223, -0.059685200452804565, -0.04661194607615471, -0.007408968638628721, 0.018808530643582344, -0.003038083203136921, -0.053458064794540405, 0.060673609375953674, 0.033333007246255875, -0.016697684302926064, -0.019790902733802795, -0.019007140770554543, -0.11442550271749496, -0.04612647742033005, 0.028598414734005928, 0.05547158420085907, -0.012379879131913185, -0.013406118378043175, 0.11184916645288467, -0.014238187111914158, 0.04184188321232796, -0.0660863071680069, -0.046611227095127106, -0.07577024400234222, -0.05353928729891777, 0.04272664338350296, -0.01018990483134985, -0.0037689474411308765, 0.024627873674035072, 0.005241301376372576, -0.02153589390218258, -0.010095288045704365, 0.07773285359144211, 0.033996738493442535, -0.020210810005664825, 0.02545195259153843, 0.01186204981058836, -0.036530207842588425, 0.005158131010830402, -0.0036410836037248373, 0.005238309036940336, 0.08584997802972794, -0.01593654416501522, 0.06260018795728683, 0.007637687027454376, -0.0020721820183098316, 0.025729576125741005, -0.031456634402275085, -0.05859566479921341, 0.05637236684560776, 0.017394736409187317, 0.061393965035676956, 0.08261527866125107, -0.01696576178073883, -0.03389408811926842, -0.028453325852751732, 0.0014034067280590534, -0.003347315127030015, -0.058271363377571106, 0.009223176166415215, -0.042492419481277466, -0.009903769940137863, -0.021820664405822754, -0.10775887966156006, -0.026815257966518402, -0.028102170675992966, -0.00042222702177241445, -0.007318234536796808, 0.04392234981060028, 0.01136527955532074, 0.04812091961503029, -0.04392291605472565, 0.006972115021198988, -0.06012673303484917, -0.05201949179172516, 0.004470475483685732, -0.015447213314473629, -0.005407951306551695, -0.07398713380098343, -0.02158186584711075, -0.04041130468249321, 0.08322198688983917, 0.06865446269512177, 0.04095247760415077, 0.044862885028123856, -0.03077671118080616, 0.059941548854112625, -0.007843653671443462, 0.050259508192539215, -0.014393534511327744, 0.009183907881379128, -0.12510280311107635, 0.08406155556440353, 0.019529350101947784, 0.08710434287786484, 0.0838257446885109, 0.0012074888218194246, -0.01455893274396658, -0.04588829353451729, 0.025968531146645546, -0.05603994429111481, 0.08152449876070023, 0.07560450583696365, 0.04705077409744263, -0.05014556273818016, 0.08961047232151031, -0.1466526836156845, -0.06576202064752579, 0.03646085783839226, -3.868083914867727e-33, -0.051755670458078384, 0.01493113860487938, -0.020378179848194122, -0.0316125862300396, 0.05517782270908356, -0.06391198188066483, -0.07270239293575287, -0.03697099909186363, 0.04257979989051819, 0.057269979268312454, -0.024292021989822388, -0.05046335607767105, 0.006615929305553436, 0.018912626430392265, -0.03798937425017357, 0.04974459484219551, -0.10187853872776031, -0.008117122575640678, 0.07481621950864792, 0.025766922160983086, 0.035794828087091446, 0.10714498907327652, 0.045296136289834976, 0.0018444715533405542, -0.007897601462900639, -0.021068112924695015, -0.055723365396261215, -0.012182231992483139, 0.09935367107391357, 0.013841395266354084, -0.05167728289961815, 0.07384514808654785, 0.046523649245500565, 0.07058049738407135, 0.006173792760819197, -0.004115134943276644, 0.04040783643722534, -0.059835564345121384, -0.049681294709444046, -0.0484352633357048, -0.038422297686338425, -0.0031639738008379936, -0.03182503953576088, 0.044532064348459244, 0.055039942264556885, 0.045649949461221695, 0.04197883978486061, -0.015155290253460407, -0.007533005904406309, 0.023365501314401627, -0.12748953700065613, -0.041822291910648346, -0.04370803385972977, 0.00015311127936001867, -0.1013803482055664, 0.019649846479296684, 0.025145726278424263, 0.09105129539966583, 0.06801442801952362, 0.03358887881040573, 0.04344942420721054, 0.07658945769071579, 0.017485331743955612, 0.03954198956489563, -0.015644820407032967, -0.08448547124862671, 0.01846010610461235, -0.04043037071824074, -0.04764872416853905, 0.0336495041847229, -0.027150247246026993, 0.040687140077352524, 0.010888257063925266, -0.08433011919260025, 0.03522590920329094, -0.03467189520597458, 0.0392196923494339, 0.06306121498346329, -0.056585170328617096, -0.05097264051437378, -0.027171313762664795, 0.017446154728531837, 0.07278737425804138, 0.007856701500713825, 0.08766298741102219, 0.053541332483291626, 0.0025991997681558132, -0.11250196397304535, 0.019087353721261024, 0.07221393287181854, -0.09955090284347534, 0.02528262697160244, 0.018473245203495026, -0.035282667726278305, 0.026188712567090988, 3.026033965019536e-33, 0.05179021134972572, 0.0017631084192544222, 0.035582490265369415, 0.07342611253261566, -0.03789958730340004, -0.043979398906230927, -0.12160452455282211, -0.014689411036670208, -0.0708480030298233, 0.08168961107730865, -0.007871643640100956, -0.012848134152591228, 0.11358838528394699, 0.09633232653141022, 0.03664300590753555, -0.0931202694773674, 0.1482032835483551, 0.024098368361592293, -0.06762170791625977, -0.0026137065142393112, 0.040371011942625046, -0.029699498787522316, -0.09700793772935867, 0.005538005847483873, -0.01875535398721695, 0.08003675192594528, -0.022314688190817833, -0.012346324510872364, -0.127467542886734, -0.0387473925948143, -0.01626327820122242, 0.04557931423187256, -0.029482202604413033, 0.011463283561170101, -0.06603118777275085, 0.06088743731379509, 0.10642540454864502, 0.07433991879224777, -0.052154988050460815, 0.008661395870149136, 0.030825959518551826, -0.014476286247372627, 0.029629867523908615, 0.06727273017168045, -0.0457485131919384, -0.04073956981301308, -0.017573324963450432, 0.00981246866285801, 0.0015381156699731946, 0.05138024315237999, -0.05018731579184532, 0.013227344490587711, -0.09269393980503082, -0.03503154218196869, 0.020972460508346558, 0.009105954319238663, 0.07208620011806488, -0.06424541026353836, 0.0222330242395401, -0.007797302212566137, -0.03479976952075958, -0.006540088448673487, -0.04916801303625107, 0.03972633555531502, 0.028176991268992424, -0.07610069215297699, -0.02412605658173561, 0.02496918849647045, -0.028512343764305115, 0.049354176968336105, 0.043789856135845184, 0.040245190262794495, -0.02492842823266983, 0.027103591710329056, -0.053460847586393356, 0.07405894249677658, 0.036094535142183304, 0.05925147607922554, -0.06005534529685974, 2.6914995032711886e-05, 0.013309388421475887, -0.06031034141778946, -0.018384849652647972, 0.04640175774693489, 0.02906465157866478, 0.07756330817937851, 0.06176717206835747, 0.016221962869167328, -0.04704691469669342, -0.05775367096066475, -0.007079677190631628, -0.06941333413124084, 0.03442668542265892, -0.036871980875730515, -0.02815871685743332, -1.2746400379626266e-08, -0.0608205571770668, 0.057172179222106934, -0.1014774963259697, -0.02683442272245884, 0.0033387013245373964, -0.010161548852920532, -0.027605105191469193, 0.050402283668518066, -0.05916517972946167, 0.015955094248056412, -0.06536272168159485, 0.021514397114515305, -0.045263539999723434, 0.02925209328532219, -0.031711187213659286, -0.048375681042671204, -0.0060439202934503555, -0.0855417400598526, -0.013974747620522976, -0.02040138468146324, 0.03430946543812752, 0.01338390912860632, 0.052894461899995804, -0.0011731382692232728, -0.0070083835162222385, 0.024152813479304314, 0.04018401354551315, 0.04492845758795738, 0.026660699397325516, -0.0030827922746539116, -0.030197588726878166, 0.014703519642353058, -0.05438748374581337, -0.05491187050938606, 0.0732802227139473, 0.026300514116883278, 0.06431245803833008, 0.06130955368280411, 0.07066348195075989, -0.13239215314388275, -0.0039134761318564415, -0.02049369364976883, 0.02167050912976265, -0.01182685885578394, 0.0587104931473732, 0.0039008138701319695, -0.03261173889040947, -0.002671581692993641, 0.04498213902115822, -0.021052906289696693, -0.011052778922021389, -0.02437625639140606, 0.07533610612154007, 0.060222137719392776, 0.09438924491405487, -0.06279629468917847, 0.0022767132613807917, -0.05705935135483742, -0.053316276520490646, -0.008084584958851337, 0.023615987971425056, 0.03523407131433487, -0.03530697524547577, -0.00720332283526659]
        self.assertEqual(expected_embedding, embedding)

    def test_get_search_results(self):
        items = get_search_results('Cop saves a person')
        result = []
        for i in items:
            for k, v in i.items():
                if k == 'title':
                    result.append(v)
                    break

        expected_items = [
            'He Walked by Night',
            'The Blue Lamp',
            'The Sound of Fury',
            'I Became a Criminal'
        ]
        self.assertEqual(expected_items, result)

if __name__ == '__main__':
    connect_to_db()
    unittest.main(argv=[''], verbosity=2, exit=False)
